<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.redhat.ghoelzer.eaphelloworldv100</groupId>
	<artifactId>eaphelloworldv100</artifactId>
	<packaging>war</packaging>
	<version>1.02</version>
	<name>eaphelloworldv100</name>
	<repositories>
		<repository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<!-- 
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
	</properties>
		 -->
<!--
	<dependencies>


As updates are released for EAP the version of the provided jboss-javaee-6.0
jar can change.  To ensure your application is compiling against the same jars
that the runtime provides the <version> element below should match the
installed version of EAP on the node hosting your application.  To determine
the version of EAP running on the node, log into an example EAP application and
look in the jbosseap/logs/server.log file for the line:

... JBAS015874: JBoss EAP 6.1.1.GA (AS 7.2.1.Final-redhat-10) started ...

To determine the correct value for <version>, download the maven repository zip
file corresponding to the installed version of EAP from the customer service
portal [1].  Unzip the file and examine the single directory under
jboss-eap-*-maven-repository/org/jboss/spec/jboss-javaee-6.0

[1] https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=appplatform&productChanged=yes"

		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>3.0.2.Final-redhat-4</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
	</dependencies>
-->
	   <properties>
      <!-- Explicitly declaring the source encoding eliminates the following 
         message: -->
      <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
         resources, i.e. build is platform dependent! -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

       <!-- JBoss dependency versions -->
       <version.org.jboss.as.plugins.maven.plugin>7.2.Final</version.org.jboss.as.plugins.maven.plugin>
       <version.org.jboss.spec.jboss.javaee.6.0>3.0.0.Final</version.org.jboss.spec.jboss.javaee.6.0>

       <!-- other plugin versions -->
       <version.compiler.plugin>2.3.1</version.compiler.plugin>
       <version.war.plugin>2.1.1</version.war.plugin>

       <!-- maven-compiler-plugin -->
       <maven.compiler.target>1.6</maven.compiler.target>
       <maven.compiler.source>1.6</maven.compiler.source>
       <metrics.version>3.0.1</metrics.version>
	   </properties>

   <dependencyManagement>
      <dependencies>
         <!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
         <!-- JBoss distributes a complete set of Java EE 6 APIs including
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
            a collection) of artifacts. We use this here so that we always get the correct
            versions of artifacts. Here we use the jboss-javaee-6.0 stack (you can
            read this as the JBoss stack of the Java EE 6 APIs). You can actually
            use this stack with any version of JBoss AS that implements Java EE 6, not
            just JBoss AS 7! -->
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${version.org.jboss.spec.jboss.javaee.6.0}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
         	<groupId>com.codahale.metrics</groupId>
         	<artifactId>metrics-core</artifactId>
         	<version>${metrics.version}</version>
         </dependency>
         <dependency>
         	<groupId>com.codahale.metrics</groupId>
         	<artifactId>metrics-servlets</artifactId>
         	<version>${metrics.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>1.1.5.Final</version>
            <scope>import</scope>
            <type>pom</type>
        </dependency>
         <dependency>
         	<groupId>junit</groupId>
         	<artifactId>junit</artifactId>
         	<version>4.8.1</version>
         	<scope>import</scope>
            <type>pom</type>
         </dependency>
    <dependency>
        <groupId>org.jboss.spec.javax.ejb</groupId>
        <artifactId>jboss-ejb-api_3.1_spec</artifactId>
        <scope>test</scope>
        <version>1.0.2.Final</version>
    </dependency>

    <dependency>
        <groupId>javax.transaction</groupId>
        <artifactId>jta</artifactId>
        <scope>test</scope>
        <version>1.1</version>
    </dependency>

    <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>1.0.0.GA</version>
    </dependency>

    <dependency>
        <groupId>javax.el</groupId>
        <artifactId>javax.el-api</artifactId>
        <version>3.0.0</version>
        <scope>test</scope>
    </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>

      <!-- Import the CDI API, we use provided scope as the API is included 
         in JBoss AS 7 -->
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the Common Annotations API (JSR-250), we use provided scope 
         as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>org.jboss.spec.javax.annotation</groupId>
         <artifactId>jboss-annotations-api_1.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the Servlet API, we use provided scope as the API is included 
         in JBoss AS 7 -->
      <dependency>
         <groupId>org.jboss.spec.javax.servlet</groupId>
         <artifactId>jboss-servlet-api_3.0_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
      	<groupId>com.codahale.metrics</groupId>
      	<artifactId>metrics-core</artifactId>
      </dependency>
      <dependency>
      	<groupId>com.codahale.metrics</groupId>
      	<artifactId>metrics-servlets</artifactId>
      </dependency>
 	<dependency>
    	<groupId>org.jboss.arquillian.junit</groupId>
    	<artifactId>arquillian-junit-container</artifactId>
    	<scope>test</scope>
	</dependency>
	<dependency>
    <groupId>org.jboss.arquillian.container</groupId>
    <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
    <version>1.0.0.CR3</version>
    <scope>test</scope>
</dependency>
<dependency>
    <groupId>org.jboss.weld</groupId>
    <artifactId>weld-core</artifactId>
    <version>1.1.5.Final</version>
    <scope>test</scope>
</dependency>
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>1.6.4</version>
    <scope>test</scope>
</dependency>
   	<dependency>
   		<groupId>junit</groupId>
   		<artifactId>junit</artifactId>
   		<version>4.8.1</version>
   	</dependency>
 <dependency>
	<groupId>javax.ejb</groupId>
	<artifactId>ejb-api</artifactId>
	<version>3.0</version>
</dependency>
 <dependency>
 	<groupId>org.jboss.spec.javax.ejb</groupId>
 	<artifactId>jboss-ejb-api_3.1_spec</artifactId>
 	<version>1.0.2.Final-redhat-2</version>
 </dependency>
 <dependency>
 	<groupId>org.jboss.spec.javax.transaction</groupId>
 	<artifactId>jboss-transaction-api_1.1_spec</artifactId>
 	<version>1.0.1.Final-redhat-2</version>
 </dependency>
 <dependency>
 	<groupId>javax.validation</groupId>
 	<artifactId>validation-api</artifactId>
 	<version>1.0.0.GA-redhat-2</version>
 </dependency>
 <dependency>
 	<groupId>org.jboss.spec.javax.el</groupId>
 	<artifactId>jboss-el-api_2.2_spec</artifactId>
 	<version>1.0.2.Final-redhat-1</version>
 </dependency>
   </dependencies>
	
	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>eaphelloworldv100</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
        			<plugin>  
            			<artifactId>maven-surefire-plugin</artifactId>  
            			<version>2.9</version>  
         			</plugin>  
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
